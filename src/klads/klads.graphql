extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.3",
        import: ["@key", "@shareable"])

directive @external on OBJECT | FIELD_DEFINITION

scalar DateTime


type Klad @key(fields: "id"){
  id: ID!
  ownerId: String!
  isApproved: Boolean!
  isRejected: Boolean!
  name: String!
  categoryId: String!
  subCategoryId: String!
  description: String!
  tags: [String]
  companyId: String!
  budgetNeeded: Float!
  budgetCollected: Float!
  partPrice: Float!
  minPartsPurchasable: Int!
  maxPartsPurchasable: Int!
  milestones: [Milestone]
  owner: User
  category: Category
  subCategory: SubCategory
  company: Company
  createdAt: DateTime
  updatedAt: DateTime
}

extend type User @key(fields: "id") {
  id:ID! @external
  klads: [Klad]
}

input CreateKladInput {
  ownerId: String!
  isApproved: Boolean!
  isRejected: Boolean!
  name: String!
  categoryId: String!
  subCategoryId: String!
  description: String!
  tags: [String]
  companyId: String!
  budgetNeeded: Float!
  budgetCollected: Float!
  partPrice: Float!
  minPartsPurchasable: Int!
  maxPartsPurchasable: Int!
  createdAt: DateTime
}

input UpdateKladInput {
  ownerId: String
  isApproved: Boolean
  isRejected: Boolean
  name: String
  categoryId: String
  subCategoryId: String
  description: String
  tags: [String]
  companyId: String
  budgetNeeded: Float
  budgetCollected: Float
  partPrice: Float
  minPartsPurchasable: Int
  maxPartsPurchasable: Int
  updatedAt: DateTime
}

extend type Query {
  klads: [Klad]!
  klad(id: String!): Klad
}

type Mutation {
  createKlad(createKladInput: CreateKladInput!): Klad!
  updateKlad(updateKladInput: UpdateKladInput!): Klad!
  removeKlad(id: String!): Klad
}
